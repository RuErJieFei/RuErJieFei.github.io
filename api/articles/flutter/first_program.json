{"title":"第一个Flutter程序","uid":"1bdf437d5b44d67d86fcfa7af7f6e8ff","slug":"flutter/first_program","date":"2021-09-21T01:57:26.663Z","updated":"2021-09-22T01:50:46.011Z","comments":true,"path":"api/articles/flutter/first_program.json","keywords":null,"cover":"https://i.loli.net/2021/09/21/Di59wWIFBxajTeo.jpg","content":"<h1 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h1><ul>\n<li>Flutter 如何在 Android、iOS 和 Web 里自动适应不同的 UI 体系</li>\n<li>Flutter 工程/项目的基本结构</li>\n<li>查找和使用 packages 来扩展功能</li>\n<li>使用热重载 (hot reload) 加快开发周期</li>\n</ul>\n<h1 id=\"所需要的工具\"><a href=\"#所需要的工具\" class=\"headerlink\" title=\"所需要的工具\"></a>所需要的工具</h1><p>你需要安装两部分内容来完成本次实验： <a href=\"https://flutter.cn/docs/get-started/install\">Flutter SDK 安装</a> 和 <a href=\"https://flutter.cn/docs/get-started/editor\">编辑器 (editor)</a> 设置。本 codelab 里，我们以 macOS 环境下的 Android Studio 以做演示，但你可以选用更顺手的配置。</p>\n<p>你可以通过如下任何设备完成本 codelab：</p>\n<ul>\n<li>开启开发者模式 (developer mode) 的 <a href=\"https://flutter.cn/docs/get-started/install/macos#set-up-your-android-device\">Android</a> 和 / 或 <a href=\"https://flutter.cn/docs/get-started/install/macos#deploy-to-ios-devices\">iOS</a> 真机；</li>\n<li><a href=\"https://flutter.cn/docs/get-started/install/macos#set-up-the-ios-simulator\">iOS 模拟器</a> (需要安装 Xcode 工具)；</li>\n<li><a href=\"https://flutter.cn/docs/get-started/install/macos#set-up-the-android-emulator\">Android 模拟器</a> (需要安装设置 Android Studio)。</li>\n<li>浏览器（如果需要 debug，则需要用 Chrome 浏览器）</li>\n</ul>\n<h1 id=\"创建初始化工程\"><a href=\"#创建初始化工程\" class=\"headerlink\" title=\"创建初始化工程\"></a>创建初始化工程</h1><ol>\n<li>替换 lib/main.dart<br>删除 lib/main.dart 中的所有代码，然后替换为下面的代码，它将在屏幕的中心显示”Hello World”。</li>\n</ol>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token class-name\">Widget</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BuildContext</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">MaterialApp</span><span class=\"token punctuation\">(</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Welcome to Flutter'</span><span class=\"token punctuation\">,</span>\n      home<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Scaffold</span><span class=\"token punctuation\">(</span>\n        appBar<span class=\"token punctuation\">:</span> <span class=\"token class-name\">AppBar</span><span class=\"token punctuation\">(</span>\n          title<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Welcome to Flutter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        body<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\">Center</span><span class=\"token punctuation\">(</span>\n          child<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>    在向你的工程项目中粘贴代码的时候，缩进可能会变形。你可以使用下面的 Flutter 工具修复此问题：<br>    Android Studio 和 IntelliJ IDEA: 右键单击Dart代码，然后选择 <strong>Reformat Code with dartfmt</strong><br>    VS Code: 右键单击并选择 Format Document.、<br>    Terminal: 运行 <code>flutter format &lt;filename&gt;</code></p>\n</div>\n<ol start=\"2\">\n<li>运行你的工程项目，根据不同的操作系统，你会看到如下运行结果界面：</li>\n</ol>\n<p><img src=\"https://i.loli.net/2021/09/22/59Dzqjm6Mn8WA1v.png\" alt=\"59Dzqjm6Mn8WA1v\"></p>\n<h3 id=\"观察和分析\"><a href=\"#观察和分析\" class=\"headerlink\" title=\"观察和分析\"></a>观察和分析</h3><ul>\n<li>本示例创建了一个具有 Material Design 风格的应用， <a href=\"https://material-io.cn/guidelines\">Material</a> 是一种移动端和网页端通用的视觉设计语言， Flutter 提供了丰富的 Material 风格的 widgets。在 <code>pubspec.yaml</code> 文件的 <code>flutter</code> 部分选择加入 <code>uses-material-design: true</code> 会是一个明智之举，通过这个可以让您使用更多 Material 的特性，比如其预定义好的 <a href=\"https://fonts.google.com/icons\">图标</a> 集。</li>\n<li>主函数（main）使用了 (<code>=&gt;</code>) 符号，这是 Dart 中单行函数或方法的简写。</li>\n<li>该应用程序继承了 <code>StatelessWidget</code>，这将会使应用本身也成为一个 widget。在 Flutter 中，几乎所有都是 widget，包括对齐 (alignment)、填充 (padding) 和布局 (layout)。</li>\n<li><code>Scaffold</code> 是 Material 库中提供的一个 widget，它提供了默认的导航栏、标题和包含主屏幕 widget 树的 body 属性。 widget 树可以很复杂。</li>\n<li>一个 widget 的主要工作是提供一个 <code>build()</code> 方法来描述如何根据其他较低级别的 widgets 来显示自己。</li>\n<li>本示例中的 body 的 widget 树中包含了一个 <code>Center</code> widget， Center widget 又包含一个 <code>Text</code> 子 widget， Center widget 可以将其子 widget 树对齐到屏幕中心。</li>\n</ul>\n<h1 id=\"使用外部Package\"><a href=\"#使用外部Package\" class=\"headerlink\" title=\"使用外部Package\"></a>使用外部Package</h1><p>在这一步中，你将开始使用一个名为 <a href=\"https://pub.flutter-io.cn/packages/english_words\">english_words</a> 的开源软件包，其中包含数千个最常用的英文单词以及一些实用功能。</p>\n<p>你可以在 <a href=\"https://pub.flutter-io.cn/\">pub.dev</a> 上找到 <code>english_words</code> 软件包以及其他许多开源软件包。</p>\n<ol>\n<li><code>pubspec.yaml</code> 文件管理 Flutter 应用程序的 assets（资源，如图片、package等）。在pubspec.yaml 中，将 english_words（3.1.5 或更高版本）添加到依赖项列表，如下面高亮显示的行：<pre class=\"line-numbers language-none\"><code class=\"language-none\">dependencies:\n  flutter:\n    sdk: flutter\n  cupertino_icons: ^1.0.2\n  english_words: ^4.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>在 Android Studio 的编辑器视图中查看 <code>pubspec.yaml</code> 文件时，点击 <strong>Pub get</strong> 会将依赖包安装到你的项目。你应该会在控制台中看到以下内容：<pre class=\"line-numbers language-none\"><code class=\"language-none\">flutter pub get\nRunning &quot;flutter pub get&quot; in startup_namer...\nProcess finished with exit code 0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>在 <code>lib/main.dart</code> 中引入，如下所示：<br>在你输入时，Android Studio会为你提供有关库导入的建议。然后它将呈现灰色的导入字符串，让你知道导入的库截至目前尚未被使用。<pre class=\"line-numbers language-none\"><code class=\"language-none\">import &#39;package:english_words&#x2F;english_words.dart&#39;;\nimport &#39;package:flutter&#x2F;material.dart&#39;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>接下来，我们使用 English words 包生成文本来替换字符串”Hello World”：<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token class-name\">Widget</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BuildContext</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">final</span> wordPair <span class=\"token operator\">=</span> <span class=\"token class-name\">WordPair</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">MaterialApp</span><span class=\"token punctuation\">(</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Welcome to Flutter'</span><span class=\"token punctuation\">,</span>\n      home<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Scaffold</span><span class=\"token punctuation\">(</span>\n        appBar<span class=\"token punctuation\">:</span> <span class=\"token class-name\">AppBar</span><span class=\"token punctuation\">(</span>\n          title<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Welcome to Flutter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        body<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\">Center</span><span class=\"token punctuation\">(</span>\n          child<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span>wordPair<span class=\"token punctuation\">.</span>asPascalCase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>如果应用程序正在运行，请使用热重载按钮 <img src=\"https://i.loli.net/2021/09/22/HPO6uMJjqkrG7mo.png\" alt=\"HPO6uMJjqkrG7mo\">更新正在运行的应用程序。每次单击热重载或保存项目时，都会在正在运行的应用程序中随机选择不同的单词对。这是因为单词对是在 build 方法内部生成的。每次 MaterialApp 需要渲染时或者在 Flutter Inspector 中切换平台时 build 都会运行。</li>\n<li>在控制台中按<code>s</code>也可以热更新</li>\n</ol>\n","feature":true,"text":"要点 Flutter 如何在 Android、iOS 和 Web 里自动适应不同的 UI 体系 Flutter 工程/项目的基本结构 查找和使用 packages 来扩展功能 使用热重载 (hot reload) 加快开发周期 所需要的工具你需要安装两部分内容来完成本次实验： F...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"Flutter","slug":"Flutter","count":3,"path":"api/categories/Flutter.json"}],"tags":[{"name":"Technology","slug":"Technology","count":3,"path":"api/tags/Technology.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A6%81%E7%82%B9\"><span class=\"toc-text\">要点</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%89%80%E9%9C%80%E8%A6%81%E7%9A%84%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">所需要的工具</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%88%9D%E5%A7%8B%E5%8C%96%E5%B7%A5%E7%A8%8B\"><span class=\"toc-text\">创建初始化工程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%82%E5%AF%9F%E5%92%8C%E5%88%86%E6%9E%90\"><span class=\"toc-text\">观察和分析</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8Package\"><span class=\"toc-text\">使用外部Package</span></a></li></ol>","author":{"name":"杨阳","slug":"blog-author","avatar":"https://i.loli.net/2021/09/20/L5Rj9TbMIwlvSHY.jpg","link":"/","description":"Please don't blame me","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"编辑工具","uid":"90dfcfb0ed4ca7c1284cfb168f48d8ef","slug":"flutter/tool","date":"2021-09-21T01:57:10.142Z","updated":"2021-09-22T01:25:00.242Z","comments":true,"path":"api/articles/flutter/tool.json","keywords":null,"cover":"https://i.loli.net/2021/09/21/PnUarzFqjdNHcl9.jpg","text":"你可以使用任意文本编辑器，结合我们的命令行工具来开发 Flutter 应用。然而，我们推荐使用我们的编辑器插件以获取更好的开发体验。这些插件提供了代码补全、代码高亮、widget 辅助编辑的功能，以及为项目的运行和调试提供支持等。 Android Studio and Intel...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Flutter","slug":"Flutter","count":3,"path":"api/categories/Flutter.json"}],"tags":[{"name":"Technology","slug":"Technology","count":3,"path":"api/tags/Technology.json"}],"author":{"name":"杨阳","slug":"blog-author","avatar":"https://i.loli.net/2021/09/20/L5Rj9TbMIwlvSHY.jpg","link":"/","description":"Please don't blame me","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}